From 1888a3dfd55ca98234a70a09d4ddcfa20510606b Mon Sep 17 00:00:00 2001
From: Thomas Burke <thomas.burke@qtac.edu.au>
Date: Sun, 5 Oct 2025 23:25:32 +1000
Subject: [PATCH] chime update

---
 Catan Connect/catan_connect.html | 268 ++++++++++++++++++++++++++-----
 menu.js                          |  15 +-
 2 files changed, 234 insertions(+), 49 deletions(-)

diff --git a/Catan Connect/catan_connect.html b/Catan Connect/catan_connect.html
index 0301d35..1ba4279 100644
--- a/Catan Connect/catan_connect.html	
+++ b/Catan Connect/catan_connect.html	
@@ -129,8 +129,18 @@
       showPauseModal: false,
       // Settings
       vibrationEnabled: true,
+      vibrate10sec: false,
+      vibrate5sec: true,
+      vibrate3sec: false,
+      vibrate1sec: false,
       flashSpeed: 600,
       robberStartRound: 11,
+      chimeEnabled: true,
+      chimeVolume: 50,
+      chime10sec: false,
+      chime5sec: true,
+      chime3sec: false,
+      chime1sec: false,
       currentView: 'stats', // 'stats', 'settings', 'info', 'advanced'
       roundStartTime: null
     };
@@ -138,6 +148,47 @@
     let intervalTimer = null;
     let intervalFlash = null;
     let flashState = false;
+    let chimeAudio = null;
+
+    // Initialize chime audio
+    function initChime() {
+      if (!chimeAudio) {
+        chimeAudio = new Audio('ding-sfx-330333_by_kakaist.mp3');
+        chimeAudio.preload = 'auto';
+      }
+      chimeAudio.volume = state.chimeVolume / 100;
+    }
+
+    // Check if vibration should trigger at current time
+    function shouldVibrate(timeLeft) {
+      if (!state.vibrationEnabled) return false;
+      
+      return (timeLeft === 10 && state.vibrate10sec) ||
+             (timeLeft === 5 && state.vibrate5sec) ||
+             (timeLeft === 3 && state.vibrate3sec) ||
+             (timeLeft === 1 && state.vibrate1sec);
+    }
+
+    // Check if chime should play at current time
+    function shouldChime(timeLeft) {
+      if (!state.chimeEnabled) return false;
+      
+      return (timeLeft === 10 && state.chime10sec) ||
+             (timeLeft === 5 && state.chime5sec) ||
+             (timeLeft === 3 && state.chime3sec) ||
+             (timeLeft === 1 && state.chime1sec);
+    }
+
+    // Play chime sound
+    function playChime() {
+      if (!chimeAudio) initChime();
+      try {
+        chimeAudio.currentTime = 0;
+        chimeAudio.play().catch(e => console.log('Chime play failed:', e));
+      } catch(e) {
+        console.log('Chime error:', e);
+      }
+    }
 
     // Load saved state on page load
     function loadState() {
@@ -152,8 +203,18 @@
           state.diceNumber = parsed.diceNumber || null;
           state.robberNumber = parsed.robberNumber || null;
           state.vibrationEnabled = parsed.vibrationEnabled !== undefined ? parsed.vibrationEnabled : true;
+          state.vibrate10sec = parsed.vibrate10sec !== undefined ? parsed.vibrate10sec : false;
+          state.vibrate5sec = parsed.vibrate5sec !== undefined ? parsed.vibrate5sec : true;
+          state.vibrate3sec = parsed.vibrate3sec !== undefined ? parsed.vibrate3sec : false;
+          state.vibrate1sec = parsed.vibrate1sec !== undefined ? parsed.vibrate1sec : false;
           state.flashSpeed = parsed.flashSpeed || 600;
           state.robberStartRound = parsed.robberStartRound || 11;
+          state.chimeEnabled = parsed.chimeEnabled !== undefined ? parsed.chimeEnabled : true;
+          state.chimeVolume = parsed.chimeVolume !== undefined ? parsed.chimeVolume : 50;
+          state.chime10sec = parsed.chime10sec !== undefined ? parsed.chime10sec : false;
+          state.chime5sec = parsed.chime5sec !== undefined ? parsed.chime5sec : true;
+          state.chime3sec = parsed.chime3sec !== undefined ? parsed.chime3sec : false;
+          state.chime1sec = parsed.chime1sec !== undefined ? parsed.chime1sec : false;
           // Always start paused after reload
           state.isPaused = true;
           state.timeLeft = parsed.timeLeft || state.roundTime;
@@ -173,8 +234,18 @@
         robberNumber: state.robberNumber,
         roundLog: state.roundLog,
         vibrationEnabled: state.vibrationEnabled,
+        vibrate10sec: state.vibrate10sec,
+        vibrate5sec: state.vibrate5sec,
+        vibrate3sec: state.vibrate3sec,
+        vibrate1sec: state.vibrate1sec,
         flashSpeed: state.flashSpeed,
-        robberStartRound: state.robberStartRound
+        robberStartRound: state.robberStartRound,
+        chimeEnabled: state.chimeEnabled,
+        chimeVolume: state.chimeVolume,
+        chime10sec: state.chime10sec,
+        chime5sec: state.chime5sec,
+        chime3sec: state.chime3sec,
+        chime1sec: state.chime1sec
       };
       localStorage.setItem('catanTimerState', JSON.stringify(toSave));
     }
@@ -260,9 +331,12 @@
             handleNext();
           } else {
             state.timeLeft--;
-            if (state.timeLeft === 5 && state.vibrationEnabled && navigator.vibrate) {
+            if (shouldVibrate(state.timeLeft) && navigator.vibrate) {
               try { navigator.vibrate([200,100,200]); } catch(e){}
             }
+            if (shouldChime(state.timeLeft)) {
+              playChime();
+            }
             saveState();
             render();
           }
@@ -438,6 +512,12 @@
     
     function updateSetting(setting, value) {
       state[setting] = parseInt(value);
+      
+      // Update chime volume immediately
+      if (setting === 'chimeVolume' && chimeAudio) {
+        chimeAudio.volume = value / 100;
+      }
+      
       saveState();
       
       // If changing flash speed while game is running, restart timer
@@ -711,51 +791,159 @@
         else if (state.currentView === 'settings') {
           content = `
             <div class="space-y-6">
-              <!-- Vibration -->
-              <div class="bg-gray-800 p-6 rounded-lg" title="Enable or disable vibration alerts">
-                <div class="flex justify-between items-center">
+              <!-- SOUND SETTINGS -->
+              <div class="bg-gray-700 p-1 rounded-lg">
+                <h2 class="text-xl font-bold mb-4 text-center bg-blue-600 py-2 rounded">🔊 Sound Settings</h2>
+                
+                <div class="bg-gray-800 p-6 rounded-lg">
+                  <div class="flex justify-between items-center mb-4">
+                    <div>
+                      <h3 class="text-lg font-bold">Audio Chime</h3>
+                      <p class="text-sm text-gray-400">Play sound during countdown</p>
+                    </div>
+                    <button onclick="toggleSetting('chimeEnabled')" 
+                      class="px-6 py-3 rounded font-bold ${state.chimeEnabled ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 hover:bg-gray-700'}">
+                      ${state.chimeEnabled ? 'ON' : 'OFF'}
+                    </button>
+                  </div>
+                  
+                  <div class="mb-4">
+                    <h4 class="text-md font-bold mb-2">Chime Timing</h4>
+                    <div class="space-y-2">
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.chime10sec ? 'checked' : ''} 
+                          onchange="toggleSetting('chime10sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">10 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.chime5sec ? 'checked' : ''} 
+                          onchange="toggleSetting('chime5sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">5 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.chime3sec ? 'checked' : ''} 
+                          onchange="toggleSetting('chime3sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">3 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.chime1sec ? 'checked' : ''} 
+                          onchange="toggleSetting('chime1sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">1 second remaining</span>
+                      </label>
+                    </div>
+                  </div>
+                  
                   <div>
-                    <h3 class="text-lg font-bold">Vibration</h3>
-                    <p class="text-sm text-gray-400">Vibrate at 5 seconds remaining</p>
+                    <h4 class="text-md font-bold mb-2">Volume (${state.chimeVolume}%)</h4>
+                    <div class="flex items-center gap-4 mb-2">
+                      <span class="text-sm">🔇</span>
+                      <input type="range" min="0" max="100" step="10" value="${state.chimeVolume}" 
+                        oninput="updateSetting('chimeVolume', this.value)"
+                        class="flex-1 h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer">
+                      <span class="text-sm">🔊</span>
+                    </div>
+                    <div class="text-center">
+                      <button onclick="playChime()" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-sm font-bold">
+                        🔊 Test Chime
+                      </button>
+                    </div>
                   </div>
-                  <button onclick="toggleSetting('vibrationEnabled')" 
-                    class="px-6 py-3 rounded font-bold ${state.vibrationEnabled ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 hover:bg-gray-700'}">
-                    ${state.vibrationEnabled ? 'ON' : 'OFF'}
-                  </button>
                 </div>
               </div>
               
-              <!-- Flash Speed -->
-              <div class="bg-gray-800 p-6 rounded-lg" title="Adjust how fast the warning flash alternates">
-                <h3 class="text-lg font-bold mb-2">Flash Speed</h3>
-                <p class="text-sm text-gray-400 mb-4">How fast the warning flash alternates (${state.flashSpeed}ms)</p>
-                <div class="flex items-center gap-4">
-                  <span class="text-sm">Slow</span>
-                  <input type="range" min="300" max="1000" step="100" value="${state.flashSpeed}" 
-                    oninput="updateSetting('flashSpeed', this.value)"
-                    class="flex-1 h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer">
-                  <span class="text-sm">Fast</span>
+              <!-- VIBRATION SETTINGS -->
+              <div class="bg-gray-700 p-1 rounded-lg">
+                <h2 class="text-xl font-bold mb-4 text-center bg-purple-600 py-2 rounded">📳 Vibration Settings</h2>
+                
+                <div class="bg-gray-800 p-6 rounded-lg">
+                  <div class="flex justify-between items-center mb-4">
+                    <div>
+                      <h3 class="text-lg font-bold">Vibration</h3>
+                      <p class="text-sm text-gray-400">Vibrate device during countdown</p>
+                    </div>
+                    <button onclick="toggleSetting('vibrationEnabled')" 
+                      class="px-6 py-3 rounded font-bold ${state.vibrationEnabled ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-600 hover:bg-gray-700'}">
+                      ${state.vibrationEnabled ? 'ON' : 'OFF'}
+                    </button>
+                  </div>
+                  
+                  <div>
+                    <h4 class="text-md font-bold mb-2">Vibration Timing</h4>
+                    <div class="space-y-2">
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.vibrate10sec ? 'checked' : ''} 
+                          onchange="toggleSetting('vibrate10sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">10 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.vibrate5sec ? 'checked' : ''} 
+                          onchange="toggleSetting('vibrate5sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">5 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.vibrate3sec ? 'checked' : ''} 
+                          onchange="toggleSetting('vibrate3sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">3 seconds remaining</span>
+                      </label>
+                      <label class="flex items-center gap-3 cursor-pointer">
+                        <input type="checkbox" ${state.vibrate1sec ? 'checked' : ''} 
+                          onchange="toggleSetting('vibrate1sec')" 
+                          class="w-4 h-4 text-blue-600 bg-gray-700 border-gray-600 rounded">
+                        <span class="text-white">1 second remaining</span>
+                      </label>
+                    </div>
+                  </div>
                 </div>
-                <div class="mt-2 text-center text-sm text-gray-400">
-                  ${state.flashSpeed < 500 ? 'Very Fast' : state.flashSpeed < 700 ? 'Fast' : state.flashSpeed < 900 ? 'Normal' : 'Slow'}
+              </div>
+              
+              <!-- FLASH SETTINGS -->
+              <div class="bg-gray-700 p-1 rounded-lg">
+                <h2 class="text-xl font-bold mb-4 text-center bg-red-600 py-2 rounded">⚡ Flash Settings</h2>
+                
+                <div class="bg-gray-800 p-6 rounded-lg">
+                  <h3 class="text-lg font-bold mb-2">Flash Speed</h3>
+                  <p class="text-sm text-gray-400 mb-4">How fast the warning flash alternates (${state.flashSpeed}ms)</p>
+                  <div class="flex items-center gap-4">
+                    <span class="text-sm">Slow</span>
+                    <input type="range" min="300" max="1000" step="100" value="${state.flashSpeed}" 
+                      oninput="updateSetting('flashSpeed', this.value)"
+                      class="flex-1 h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer">
+                    <span class="text-sm">Fast</span>
+                  </div>
+                  <div class="mt-2 text-center text-sm text-gray-400">
+                    ${state.flashSpeed < 500 ? 'Very Fast' : state.flashSpeed < 700 ? 'Fast' : state.flashSpeed < 900 ? 'Normal' : 'Slow'}
+                  </div>
                 </div>
               </div>
               
-              <!-- Robber Start Round -->
-              <div class="bg-gray-800 p-6 rounded-lg" title="Set which round the robber becomes active">
-                <h3 class="text-lg font-bold mb-2">Robber Activation Round</h3>
-                <p class="text-sm text-gray-400 mb-4">Which round the robber becomes active (currently: ${state.robberStartRound})</p>
-                <div class="flex items-center gap-4">
-                  <button onclick="updateSetting('robberStartRound', ${Math.max(1, state.robberStartRound - 1)})"
-                    class="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded font-bold text-xl">−</button>
-                  <div class="flex-1 text-center">
-                    <div class="text-4xl font-bold">${state.robberStartRound}</div>
+              <!-- ROBBER SETTINGS -->
+              <div class="bg-gray-700 p-1 rounded-lg">
+                <h2 class="text-xl font-bold mb-4 text-center bg-green-600 py-2 rounded">🎯 Robber Settings</h2>
+                
+                <div class="bg-gray-800 p-6 rounded-lg">
+                  <h3 class="text-lg font-bold mb-2">Robber Activation Round</h3>
+                  <p class="text-sm text-gray-400 mb-4">Which round the robber becomes active (currently: ${state.robberStartRound})</p>
+                  <div class="flex items-center gap-4">
+                    <button onclick="updateSetting('robberStartRound', ${Math.max(1, state.robberStartRound - 1)})"
+                      class="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded font-bold text-xl">−</button>
+                    <div class="flex-1 text-center">
+                      <div class="text-4xl font-bold">${state.robberStartRound}</div>
+                    </div>
+                    <button onclick="updateSetting('robberStartRound', ${Math.min(99, state.robberStartRound + 1)})"
+                      class="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded font-bold text-xl">+</button>
                   </div>
-                  <button onclick="updateSetting('robberStartRound', ${Math.min(99, state.robberStartRound + 1)})"
-                    class="px-4 py-2 bg-gray-700 hover:bg-gray-600 rounded font-bold text-xl">+</button>
                 </div>
               </div>
             </div>
+              </div>
+            </div>
           `;
         }
         
@@ -943,10 +1131,10 @@
 
             <button onclick="handleStart()" class="px-12 py-6 bg-white text-4xl font-bold text-orange-700 rounded-lg hover:bg-gray-100">START GAME</button>
 
-<p>Game saves to last state, to start fresh click new game in the settings below
+<p class="text-center">Don't worry — your game saves automatically!<br>If you need to start a new game click the Settings & Stats button below
             <p>
               
-             <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl px-6 font-bold text-orange-700 bg-black py-1 rounded-lg hover:text-gray-300"> Settings ⚙️</button>
+             <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl px-6 font-bold text-orange-700 bg-black py-1 rounded-lg hover:text-gray-300 flex items-center gap-2"> Settings & Statistics <span style="font-size: 1.2em;">⚙️/📊</span></button>
               
               
               </p>
@@ -972,7 +1160,7 @@
                 <div class="text-lg md:text-2xl font-bold">${state.roundTime}s</div>
                 <button onclick="adjustRoundTime(5)" title="Increase round time" class="text-xl md:text-3xl font-bold hover:text-gray-300 px-2 md:px-3">+</button>
                 <div class="h-6 w-px bg-white opacity-30 mx-1 md:mx-2"></div>
-                <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl font-bold hover:text-gray-300">⚙️</button>
+                <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl font-bold hover:text-gray-300">⚙️/📊</button>
               </div>
 
               <div class="flex-1 flex flex-col items-center justify-center px-4" style="min-height: 100vh;">
@@ -1010,7 +1198,7 @@
                 <div class="h-6 w-px bg-white opacity-30 mx-1 md:mx-2"></div>
                 <div class="round-number text-lg md:text-2xl font-bold" title="Current round number">R${state.round}</div>
                 <div class="h-6 w-px bg-white opacity-30 mx-1 md:mx-2"></div>
-                <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl font-bold hover:text-gray-300">⚙️</button>
+                <button onclick="showStatsPrompt()" title="For stats, info, settings, or to start a new game" class="text-lg md:text-2xl font-bold hover:text-gray-300">⚙️/📊</button>
               </div>
 
               <div class="flex-1 flex flex-col items-center justify-center px-4" style="min-height: 100vh;">
@@ -1038,6 +1226,10 @@
     
     // Load saved state
     loadState();
+    
+    // Initialize chime audio
+    initChime();
+    
     render();
     
     // Keyboard shortcuts
diff --git a/menu.js b/menu.js
index 23040d5..8045f48 100644
--- a/menu.js
+++ b/menu.js
@@ -65,9 +65,7 @@
         return `
             <div class="hamburger-menu">
                 <button class="hamburger-btn" onclick="toggleMenu()">
-                    <span class="hamburger-line"></span>
-                    <span class="hamburger-line"></span>
-                    <span class="hamburger-line"></span>
+                    🌐
                 </button>
                 <div class="menu-overlay" id="menuOverlay">
                     <div class="menu-content">
@@ -106,10 +104,9 @@
                 height: 50px;
                 cursor: pointer;
                 display: flex;
-                flex-direction: column;
                 justify-content: center;
                 align-items: center;
-                gap: 4px;
+                font-size: 24px;
                 transition: all 0.3s ease;
             }
 
@@ -119,11 +116,7 @@
             }
 
             .hamburger-line {
-                width: 25px;
-                height: 3px;
-                background: #d49415;
-                border-radius: 2px;
-                transition: all 0.3s ease;
+                display: none;
             }
 
             .menu-overlay {
@@ -226,7 +219,7 @@
                 }
                 
                 .hamburger-line {
-                    width: 22px;
+                    display: none;
                 }
             }
         `;
-- 
2.39.5 (Apple Git-154)

